From be3902277faf0b57e7a231bcf2fd0b13eaeb77ee Mon Sep 17 00:00:00 2001
From: Rve27 <rve27github@gmail.com>
Date: Tue, 8 Apr 2025 21:25:21 +0800
Subject: [PATCH] power: smb5-lib: Implement bypass charging

Signed-off-by: Rve27 <rve27github@gmail.com>
---
 drivers/power/supply/qcom/smb5-lib.c | 53 +++++++++++++++++++++-------
 drivers/power/supply/qcom/smb5-lib.h |  2 ++
 2 files changed, 43 insertions(+), 12 deletions(-)

diff --git a/drivers/power/supply/qcom/smb5-lib.c b/drivers/power/supply/qcom/smb5-lib.c
index ae1474e01b8c..332c4daa4787 100644
--- a/drivers/power/supply/qcom/smb5-lib.c
+++ b/drivers/power/supply/qcom/smb5-lib.c
@@ -54,6 +54,8 @@
 	|| typec_mode == POWER_SUPPLY_TYPEC_SOURCE_HIGH)	\
 	&& (!chg->typec_legacy || chg->typec_legacy_use_rp_icl))
 
+static int bypass_charging = 0;
+
 static void update_sw_icl_max(struct smb_charger *chg, int pst);
 static int smblib_get_prop_typec_mode(struct smb_charger *chg);
 
@@ -2118,9 +2120,14 @@ int smblib_vbus_regulator_is_enabled(struct regulator_dev *rdev)
 int smblib_get_prop_input_suspend(struct smb_charger *chg,
 				  union power_supply_propval *val)
 {
-	val->intval
-		= (get_client_vote(chg->usb_icl_votable, USER_VOTER) == 0)
-		 && get_client_vote(chg->dc_suspend_votable, USER_VOTER);
+	if ((get_client_vote(chg->chg_disable_votable, BYPASS_VOTER) == 1)) {
+        	val->intval = 1;
+     	} else if (bypass_charging) {
+         	val->intval = 2;
+     	} else {
+        	val->intval = 0;
+     	}
+
 	return 0;
 }
 
@@ -2751,14 +2758,14 @@ int smblib_set_prop_input_suspend(struct smb_charger *chg,
 	int rc;
 
 	/* vote 0mA when suspended */
-	rc = vote(chg->usb_icl_votable, USER_VOTER, (bool)val->intval, 0);
+	rc = vote(chg->usb_icl_votable, USER_VOTER, false, 0);
 	if (rc < 0) {
 		smblib_err(chg, "Couldn't vote to %s USB rc=%d\n",
 			(bool)val->intval ? "suspend" : "resume", rc);
 		return rc;
 	}
 
-	rc = vote(chg->dc_suspend_votable, USER_VOTER, (bool)val->intval, 0);
+	rc = vote(chg->dc_suspend_votable, USER_VOTER, false, 0);
 	if (rc < 0) {
 		smblib_err(chg, "Couldn't vote to %s DC rc=%d\n",
 			(bool)val->intval ? "suspend" : "resume", rc);
@@ -2768,6 +2775,23 @@ int smblib_set_prop_input_suspend(struct smb_charger *chg,
 	if (chg->use_bq_pump)
 		chg->bq_input_suspend = !!(val->intval);
 
+	if (val->intval == 1) {
+         	rc = vote(chg->chg_disable_votable, BYPASS_VOTER, 1, 0);
+         	bypass_charging = 0;
+     	} else if (val->intval == 2) {
+         	rc = vote(chg->chg_disable_votable, BYPASS_VOTER, 0, 0);
+         	bypass_charging = 1;
+     	} else {
+         	rc = vote(chg->chg_disable_votable, BYPASS_VOTER, 0, 0);
+         	bypass_charging = 0;
+     	}
+
+	if (rc < 0) {
+ 		smblib_err(chg, "Couldn't vote to %d input_suspend rc=%d\n",
+ 			val->intval, rc);
+ 		return rc;
+ 	}
+
 	power_supply_changed(chg->batt_psy);
 	return rc;
 }
@@ -2835,6 +2859,8 @@ extern int LctThermal;
 int smblib_set_prop_system_temp_level(struct smb_charger *chg,
 				const union power_supply_propval *val)
 {
+	int system_temp_level = 0;
+
 	if (val->intval < 0)
 		return -EINVAL;
 
@@ -2859,21 +2885,24 @@ int smblib_set_prop_system_temp_level(struct smb_charger *chg,
 		return 0;
 	}
 
-	if (val->intval == chg->system_temp_level)
-		return 0;
-
-	chg->system_temp_level = val->intval;
+	if (bypass_charging) {
+         	if (chg->thermal_levels - 2 > system_temp_level) system_temp_level = chg->thermal_levels-2;
+         	if (system_temp_level < 0) system_temp_level = 0;
+         	pr_info("%s limited charging enabled %d",__FUNCTION__, system_temp_level);
+     	} else if (system_temp_level > 0) {
+         	pr_info("%s charging enabled, but thermal limited %d",__FUNCTION__, system_temp_level);
+     	}
 
-	if (chg->system_temp_level == chg->thermal_levels)
+	if (system_temp_level >= chg->thermal_levels)
 		return vote(chg->chg_disable_votable,
 			THERMAL_DAEMON_VOTER, true, 0);
 
 	vote(chg->chg_disable_votable, THERMAL_DAEMON_VOTER, false, 0);
-	if (chg->system_temp_level == 0)
+	if (system_temp_level == 0)
 		return vote(chg->fcc_votable, THERMAL_DAEMON_VOTER, false, 0);
 
 	vote(chg->fcc_votable, THERMAL_DAEMON_VOTER, true,
-			chg->thermal_mitigation[chg->system_temp_level]);
+			chg->thermal_mitigation[system_temp_level]);
 	return 0;
 }
 
diff --git a/drivers/power/supply/qcom/smb5-lib.h b/drivers/power/supply/qcom/smb5-lib.h
index 9460f6798290..51235cdb0145 100644
--- a/drivers/power/supply/qcom/smb5-lib.h
+++ b/drivers/power/supply/qcom/smb5-lib.h
@@ -108,6 +108,8 @@ enum print_reason {
 #define JEITA_VOTER                     "JEITA_VOTER"
 #define GPIO_DCIN_VOTER			"GPIO_DCIN_VOTER"
 
+#define BYPASS_VOTER			"BYPASS_VOTER"
+
 #define BOOST_BACK_STORM_COUNT	3
 #define WEAK_CHG_STORM_COUNT	8
 
-- 
2.45.2

